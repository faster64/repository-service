// <auto-generated />
using System;
using KiotVietTimeSheet.Infrastructure.Persistence.Ef;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KiotVietTimeSheet.Api.Migrations.EfTimeSheetDbContext
{
    [DbContext(typeof(EfDbContext))]
    partial class EfDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("Relational:Sequence:.AllowanceSeq", "'AllowanceSeq', '', '1', '100', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.BranchSettingSeq", "'BranchSettingSeq', '', '1', '100', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.ClockingHistorySeq", "'ClockingHistorySeq', '', '1', '100', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.ClockingPenalizeSeq", "'ClockingPenalizeSeq', '', '1', '1000', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.ClockingSeq", "'ClockingSeq', '', '1', '8900', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.CommissionBranchSeq", "'CommissionBranchSeq', '', '1', '100', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.CommissionDetailSeq", "'CommissionDetailSeq', '', '1', '100', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.CommissionSeq", "'CommissionSeq', '', '1', '100', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.ConfirmClockingHistorySeq", "'ConfirmClockingHistorySeq', '', '1', '100', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.ConfirmClockingSeq", "'ConfirmClockingSeq', '', '1', '100', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.DeductionSeq", "'DeductionSeq', '', '1', '100', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.DepartmentSeq", "'DepartmentSeq', '', '1', '100', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.EmployeeBranchSeq", "'EmployeeBranchSeq', '', '1', '100', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.EmployeeProfilePictureSeq", "'EmployeeProfilePictureSeq', '', '1', '100', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.EmployeeSeq", "'EmployeeSeq', '', '1', '100', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.FingerPrintSeq", "'FingerPrintSeq', '', '1', '1000', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.GpsInfoSeq", "'GpsInfoSeq', '', '1', '100', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.HolidaySeq", "'HolidaySeq', '', '1', '100', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.JobTitleSeq", "'JobTitleSeq', '', '1', '100', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.PayRateSeq", "'PayRateSeq', '', '1', '100', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.PayRateTemplateSeq", "'PayRateTemplateSeq', '', '1', '100', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.PaysheetSeq", "'PaysheetSeq', '', '1', '100', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.PayslipClockingPenalizeSeq", "'PayslipClockingPenalizeSeq', '', '1', '1000', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.PayslipPenalizeSeq", "'PayslipPenalizeSeq', '', '1', '1000', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.PayslipSeq", "'PayslipSeq', '', '1', '100', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.PenalizeSeq", "'PenalizeSeq', '', '1', '1000', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.SettingsSeq", "'SettingsSeq', '', '1', '100', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.ShiftSeq", "'ShiftSeq', '', '1', '100', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.TimeSheetSeq", "'TimeSheetSeq', '', '1', '1000', '', '', 'Int64', 'False'")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.AllowanceAggregate.Models.Allowance", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "AllowanceSeq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Code");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2(3)")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("BIT");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<int>("TenantId")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("TenantId")
                        .HasName("NonClusteredIndex-Allowance-TenantId");

                    b.HasIndex("TenantId", "Code")
                        .IsUnique()
                        .HasName("NonClusteredIndex-Allowance-TenantId-Code-Uniq")
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("Allowance");
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.BranchSettingAggregate.Models.BranchSetting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "BranchSettingSeq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<int>("BranchId")
                        .HasColumnType("INT");

                    b.Property<int>("TenantId")
                        .HasColumnType("INT");

                    b.Property<string>("WorkingDays")
                        .HasColumnType("NVARCHAR(255)");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "BranchId")
                        .IsUnique()
                        .HasName("NonClusteredIndex-BranchSetting-TenantId-And-BranchId");

                    b.ToTable("BranchSetting");
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.ClockingAggregate.Models.Clocking", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "ClockingSeq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<byte?>("AbsenceType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TINYINT")
                        .HasDefaultValue(null);

                    b.Property<int>("BranchId")
                        .HasColumnType("INT");

                    b.Property<DateTime?>("CheckInDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2(3)")
                        .HasDefaultValue(null);

                    b.Property<DateTime?>("CheckOutDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2(3)")
                        .HasDefaultValue(null);

                    b.Property<byte>("ClockingPaymentStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TINYINT")
                        .HasDefaultValue((byte)0);

                    b.Property<byte>("ClockingStatus")
                        .HasColumnType("TINYINT");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2(3)")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("BIT");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<string>("Note")
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<int>("OverTimeAfterShiftWork")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasDefaultValue(0);

                    b.Property<int>("OverTimeBeforeShiftWork")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasDefaultValue(0);

                    b.Property<long>("ShiftId")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<int>("TenantId")
                        .HasColumnType("INT");

                    b.Property<int>("TimeIsLate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasDefaultValue(0);

                    b.Property<int>("TimeIsLeaveWorkEarly")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasDefaultValue(0);

                    b.Property<long>("TimeSheetId")
                        .HasColumnType("BIGINT");

                    b.Property<long>("WorkById")
                        .HasColumnType("BIGINT");

                    b.HasKey("Id");

                    b.HasIndex("BranchId")
                        .HasName("NonClusteredIndex-Clocking-BranchId");

                    b.HasIndex("EmployeeId")
                        .HasName("NonClusteredIndex-Clocking-EmployeeId");

                    b.HasIndex("ShiftId")
                        .HasName("NonClusteredIndex-Clocking-ShiftId");

                    b.HasIndex("TenantId")
                        .HasName("NonClusteredIndex-Clocking-TenantId");

                    b.HasIndex("TimeSheetId")
                        .HasName("NonClusteredIndex-Clocking-TimeSheetId");

                    b.HasIndex("WorkById")
                        .HasName("NonClusteredIndex-Clocking-WorkById");

                    b.ToTable("Clocking");
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.ClockingAggregate.Models.ClockingHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "ClockingHistorySeq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<byte?>("AbsenceType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TINYINT")
                        .HasDefaultValue(null);

                    b.Property<string>("AutoTimekeepingUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(255)")
                        .HasDefaultValue(null);

                    b.Property<int>("BranchId")
                        .HasColumnType("INT");

                    b.Property<DateTime?>("CheckTime")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<DateTime?>("CheckedInDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<DateTime?>("CheckedOutDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<byte>("ClockingHistoryStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TINYINT")
                        .HasDefaultValueSql("1");

                    b.Property<long>("ClockingId")
                        .HasColumnType("BIGINT");

                    b.Property<byte>("ClockingStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TINYINT")
                        .HasDefaultValueSql("2");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2(3)")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasDefaultValue(null);

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<int>("OverTimeAfterShiftWork")
                        .HasColumnType("INT");

                    b.Property<int>("OverTimeAfterShiftWorkAdjustment")
                        .HasColumnType("INT");

                    b.Property<int>("OverTimeBeforeShiftWork")
                        .HasColumnType("INT");

                    b.Property<int>("OverTimeBeforeShiftWorkAdjustment")
                        .HasColumnType("INT");

                    b.Property<long?>("ShiftFrom")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasDefaultValue(null);

                    b.Property<long?>("ShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasDefaultValue(null);

                    b.Property<long?>("ShiftTo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasDefaultValue(null);

                    b.Property<int>("TenantId")
                        .HasColumnType("INT");

                    b.Property<int>("TimeIsLate")
                        .HasColumnType("INT");

                    b.Property<int>("TimeIsLateAdjustment")
                        .HasColumnType("INT");

                    b.Property<int>("TimeIsLeaveWorkEarly")
                        .HasColumnType("INT");

                    b.Property<int>("TimeIsLeaveWorkEarlyAdjustment")
                        .HasColumnType("INT");

                    b.Property<byte>("TimeKeepingType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TINYINT")
                        .HasDefaultValueSql("1");

                    b.HasKey("Id");

                    b.HasIndex("BranchId")
                        .HasName("NonClusteredIndex-ClockingHistory-BranchId");

                    b.HasIndex("ClockingId")
                        .HasName("NonClusteredIndex-ClockingHistory-ClockingId");

                    b.HasIndex("TenantId")
                        .HasName("NonClusteredIndex-ClockingHistory-TenantId");

                    b.HasIndex("TenantId", "ClockingId", "AutoTimekeepingUid")
                        .IsUnique()
                        .HasName("UniqueIndex-ClockingHistory-AutoTimekeepingUid")
                        .HasFilter("[AutoTimekeepingUid] IS NOT NULL");

                    b.ToTable("ClockingHistory");
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.ClockingAggregate.Models.ClockingPenalize", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "ClockingPenalizeSeq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<long>("ClockingId")
                        .HasColumnType("BIGINT");

                    b.Property<byte>("ClockingPaymentStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TINYINT")
                        .HasDefaultValue((byte)0);

                    b.Property<long>("CreatedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2(3)")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("BIGINT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("BIT");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<int>("MoneyType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasDefaultValue(1);

                    b.Property<long>("PenalizeId")
                        .HasColumnType("BIGINT");

                    b.Property<int>("TenantId")
                        .HasColumnType("INT");

                    b.Property<int>("TimesCount")
                        .HasColumnType("INT");

                    b.Property<decimal>("Value")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ClockingId")
                        .HasName("NonClusteredIndex-ClockingPenalize-ClockingId");

                    b.HasIndex("PenalizeId")
                        .HasName("NonClusteredIndex-ClockingPenalize-PenalizeId");

                    b.HasIndex("TenantId")
                        .HasName("NonClusteredIndex-ClockingPenalize-TenantId");

                    b.ToTable("ClockingPenalize");
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.CommissionAggregate.Models.Commission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "CommissionSeq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<long>("CreatedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2(3)")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsAllBranch");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("BIT");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("TenantId")
                        .HasName("NonClusteredIndex-Commission-TenantId");

                    b.ToTable("Commission");
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.CommissionAggregate.Models.CommissionBranch", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "CommissionBranchSeq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<int>("BranchId")
                        .HasColumnType("INT");

                    b.Property<long>("CommissionId")
                        .HasColumnType("BIGINT");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("BranchId")
                        .HasName("NonClusteredIndex-CommissionBranch-BranchId");

                    b.HasIndex("CommissionId");

                    b.HasIndex("TenantId")
                        .HasName("NonClusteredIndex-CommissionBranch-TenantId");

                    b.ToTable("CommissionBranch");
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.CommissionDetailAggregate.Models.CommissionDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "CommissionDetailSeq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<long>("CommissionId")
                        .HasColumnType("BIGINT");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2(3)")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("BIT");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<long>("ProductId")
                        .HasColumnType("BIGINT");

                    b.Property<int>("TenantId");

                    b.Property<decimal?>("Value");

                    b.Property<decimal?>("ValueRatio");

                    b.HasKey("Id");

                    b.HasIndex("CommissionId");

                    b.HasIndex("TenantId")
                        .HasName("NonClusteredIndex-CommissionDetail-TenantId");

                    b.ToTable("CommissionDetail");
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.ConfirmClockingAggregate.Models.ConfirmClocking", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "ConfirmClockingSeq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<DateTime>("CheckTime")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2(3)")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("BIGINT");

                    b.Property<string>("Extra")
                        .HasColumnType("NVARCHAR(4000)");

                    b.Property<long>("GpsInfoId")
                        .HasColumnType("BIGINT");

                    b.Property<string>("IdentityKeyClocking")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("BIT");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<string>("Note")
                        .HasColumnType("NVARCHAR(2000)");

                    b.Property<byte>("Status")
                        .HasColumnType("TINYINT");

                    b.Property<int>("TenantId")
                        .HasColumnType("INT");

                    b.Property<byte>("Type")
                        .HasColumnType("TINYINT");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("GpsInfoId")
                        .HasName("NonClusteredIndex-ConfirmClocking-GpsInfoId");

                    b.HasIndex("TenantId")
                        .HasName("NonClusteredIndex-ConfirmClocking-TenantId");

                    b.ToTable("ConfirmClocking");
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.ConfirmClockingAggregate.Models.ConfirmClockingHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "ConfirmClockingHistorySeq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<long>("ConfirmBy")
                        .HasColumnType("BIGINT");

                    b.Property<long>("ConfirmClockingId")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime>("ConfirmDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2(3)")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("BIT");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<string>("Note")
                        .HasColumnType("NVARCHAR(2000)");

                    b.Property<byte>("StatusNew")
                        .HasColumnType("TINYINT");

                    b.Property<byte>("StatusOld")
                        .HasColumnType("TINYINT");

                    b.Property<int>("TenantId")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("ConfirmClockingId")
                        .HasName("NonClusteredIndex-ConfirmClockingHistory-ConfirmClockingId");

                    b.HasIndex("TenantId")
                        .HasName("NonClusteredIndex-ConfirmClockingHistory-TenantId");

                    b.ToTable("ConfirmClockingHistory");
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.DeductionAggregate.Models.Deduction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "DeductionSeq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Code");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2(3)")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("BIT");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<int>("TenantId")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("TenantId")
                        .HasName("NonClusteredIndex-Deduction-TenantId");

                    b.HasIndex("TenantId", "Code")
                        .IsUnique()
                        .HasName("NonClusteredIndex-Deduction-TenantId-Code-Uniq")
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("Deduction");
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.DepartmentAggregate.Models.Department", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "DepartmentSeq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<long>("CreatedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2(3)")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("BIT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("BIT");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int>("TenantId")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("TenantId")
                        .HasName("NonClusteredIndex-Department-TenantId");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.EmployeeAggregate.Models.Employee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "EmployeeSeq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("AccountSecretKey")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Address")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<int>("BranchId")
                        .HasColumnType("INT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2(3)")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<long?>("DepartmentId")
                        .HasColumnType("BIGINT");

                    b.Property<string>("Email")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("Facebook")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("BIT");

                    b.Property<string>("IdentityKeyClocking")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("IdentityNumber")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("BIT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("BIT");

                    b.Property<long?>("JobTitleId")
                        .HasColumnType("BIGINT");

                    b.Property<string>("LocationName")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("MobilePhone")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("Note")
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<int>("TenantId")
                        .HasColumnType("INT");

                    b.Property<long?>("UserId")
                        .HasColumnType("BIGINT");

                    b.Property<string>("WardName")
                        .HasColumnType("NVARCHAR(255)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId")
                        .HasName("NonClusteredIndex-Employee-BranchId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("JobTitleId");

                    b.HasIndex("TenantId", "Code")
                        .IsUnique()
                        .HasName("NonClusteredIndex-Employee-TenantId-Code-Uniq");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.EmployeeAggregate.Models.EmployeeBranch", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "EmployeeBranchSeq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<int>("BranchId")
                        .HasColumnType("INT");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("BIGINT");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("BranchId")
                        .HasName("NonClusteredIndex-EmployeeBranch-BranchId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("TenantId")
                        .HasName("NonClusteredIndex-EmployeeBranch-TenantId");

                    b.ToTable("EmployeeBranch");
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.EmployeeAggregate.Models.EmployeeProfilePicture", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "EmployeeProfilePictureSeq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<long>("EmployeeId")
                        .HasColumnType("BIGINT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(4000)");

                    b.Property<bool>("IsMainImage")
                        .HasColumnType("BIT");

                    b.Property<int>("TenantId")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .HasName("NonClusteredIndex-EmployeeProfilePicture-EmployeeId");

                    b.HasIndex("TenantId")
                        .HasName("NonClusteredIndex-EmployeeProfilePicture-TenantId");

                    b.ToTable("EmployeeProfilePicture");
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.FingerPrintAggregate.Models.FingerMachine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId");

                    b.Property<int?>("Commpass")
                        .HasColumnType("INT");

                    b.Property<int?>("ConnectionType");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2(3)")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("IpAddress")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("MachineId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("MachineName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<string>("Note")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<int?>("Port")
                        .HasColumnType("INT");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasDefaultValue(1);

                    b.Property<int>("TenantId");

                    b.Property<string>("Vendor")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId")
                        .HasName("NonClusteredIndex-FingerMachine-BranchId");

                    b.HasIndex("TenantId")
                        .HasName("NonClusteredIndex-FingerMachine-TenantId");

                    b.HasIndex("TenantId", "MachineId")
                        .IsUnique();

                    b.ToTable("FingerMachine");
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.FingerPrintAggregate.Models.FingerPrint", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "FingerPrintSeq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<int>("BranchId");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2(3)")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long>("EmployeeId");

                    b.Property<string>("FingerCode")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("FingerName")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<int>("FingerNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasDefaultValue(0);

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("BranchId")
                        .HasName("NonClusteredIndex-FingerPrint-BranchId");

                    b.HasIndex("EmployeeId")
                        .HasName("NonClusteredIndex-FingerPrint-EmployeeId");

                    b.HasIndex("TenantId")
                        .HasName("NonClusteredIndex-FingerPrint-TenantId");

                    b.ToTable("FingerPrint");
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.GpsInfoAggregate.Models.GpsInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "GpsInfoSeq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Address")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<int>("BranchId")
                        .HasColumnType("INT");

                    b.Property<string>("Coordinate")
                        .HasColumnType("NVARCHAR(2000)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2(3)")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<string>("District")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("BIT");

                    b.Property<string>("LocationName")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<string>("Province")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("QrKey")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<int>("RadiusLimit")
                        .HasColumnType("INT");

                    b.Property<byte>("Status")
                        .HasColumnType("TINYINT");

                    b.Property<int>("TenantId")
                        .HasColumnType("INT");

                    b.Property<string>("WardName")
                        .HasColumnType("NVARCHAR(100)");

                    b.HasKey("Id");

                    b.HasIndex("TenantId")
                        .HasName("NonClusteredIndex-GpsInfo-TenantId");

                    b.ToTable("GpsInfo");
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.HolidayAggregate.Models.Holiday", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "HolidaySeq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<long>("CreatedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2(3)")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<DateTime>("From")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("BIT");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<int>("TenantId")
                        .HasColumnType("INT");

                    b.Property<DateTime>("To")
                        .HasColumnType("DATETIME2(3)");

                    b.HasKey("Id");

                    b.HasIndex("TenantId")
                        .HasName("NonClusteredIndex-Holiday-TenantId");

                    b.ToTable("Holiday");
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.JobTitleAggregate.Models.JobTitle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "JobTitleSeq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<long>("CreatedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2(3)")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("BIT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("BIT");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int>("TenantId")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("TenantId")
                        .HasName("NonClusteredIndex-JobTitle-TenantId");

                    b.ToTable("JobTitle");
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.PayRateAggregate.Models.PayRate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "PayRateSeq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<long>("CreatedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2(3)")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("BIGINT");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<long?>("PayRateTemplateId")
                        .HasColumnType("BIGINT");

                    b.Property<byte>("SalaryPeriod")
                        .HasColumnType("TINYINT");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .HasName("NonClusteredIndex-PayRate-EmployeeId");

                    b.HasIndex("TenantId")
                        .HasName("NonClusteredIndex-PayRate-TenantId");

                    b.ToTable("PayRate");
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.PayRateAggregate.Models.PayRateDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("PayRateId");

                    b.Property<string>("RuleType")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("RuleValue")
                        .IsRequired()
                        .HasColumnType("NTEXT");

                    b.Property<int>("TenantId")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("PayRateId")
                        .HasName("NonClusteredIndex-PayRateDetail-PayRateId");

                    b.ToTable("PayRateDetail");
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.PayRateTemplateAggregate.Models.PayRateTemplate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "PayRateTemplateSeq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<int>("BranchId")
                        .HasColumnType("INT");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2(3)")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<byte>("SalaryPeriod")
                        .HasColumnType("TINYINT");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("BranchId")
                        .HasName("NonClusteredIndex-PayRateTemplate-BranchId");

                    b.HasIndex("TenantId")
                        .HasName("NonClusteredIndex-PayRateTemplate-TenantId");

                    b.ToTable("PayRateTemplate");
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.PayRateTemplateAggregate.Models.PayRateTemplateDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CreatedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2(3)")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<long>("PayRateTemplateId");

                    b.Property<string>("RuleType")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("RuleValue")
                        .IsRequired()
                        .HasColumnType("NTEXT");

                    b.Property<int>("TenantId")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("PayRateTemplateId")
                        .HasName("NonClusteredIndex-PayRateTemplateDetail-PayRateTemplateId");

                    b.ToTable("PayRateTemplateDetail");
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.PaysheetAggregate.Models.Paysheet", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "PaysheetSeq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<int>("BranchId")
                        .HasColumnType("INT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2(3)")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long>("CreatorBy")
                        .HasColumnType("BIGINT");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<int?>("ErrorStatus")
                        .HasColumnType("INT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("BIT");

                    b.Property<bool>("IsDraft")
                        .HasColumnType("BIT");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<string>("Name");

                    b.Property<string>("Note")
                        .HasColumnType("NVARCHAR(2000)");

                    b.Property<DateTime?>("PaysheetCreatedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<string>("PaysheetPeriodName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<byte>("PaysheetStatus")
                        .HasColumnType("TINYINT");

                    b.Property<byte>("SalaryPeriod")
                        .HasColumnType("TINYINT");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<int>("TenantId")
                        .HasColumnType("INT");

                    b.Property<int?>("TimeOfStandardWorkingDay");

                    b.Property<long>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasDefaultValue(0L);

                    b.Property<int>("WorkingDayNumber")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("BranchId")
                        .HasName("NonClusteredIndex-Paysheet-BranchId");

                    b.HasIndex("TenantId")
                        .HasName("NonClusteredIndex-Paysheet-TenantId");

                    b.HasIndex("TenantId", "Code")
                        .IsUnique()
                        .HasName("NonClusteredIndex-Paysheet-TenantId-Code-Uniq");

                    b.ToTable("Paysheet");
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.PayslipAggregate.Models.Payslip", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "PayslipSeq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<decimal>("Allowance")
                        .HasColumnType("MONEY");

                    b.Property<decimal>("Bonus")
                        .HasColumnType("MONEY");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<decimal>("CommissionSalary")
                        .HasColumnType("MONEY");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2(3)")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<decimal>("Deduction")
                        .HasColumnType("MONEY");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("BIGINT");

                    b.Property<decimal>("GrossSalary")
                        .HasColumnType("MONEY");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("BIT");

                    b.Property<bool>("IsDraft")
                        .HasColumnType("BIT");

                    b.Property<decimal>("MainSalary")
                        .HasColumnType("MONEY");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<decimal>("NetSalary")
                        .HasColumnType("MONEY");

                    b.Property<string>("Note")
                        .HasColumnType("NVARCHAR(2000)");

                    b.Property<decimal>("OvertimeSalary")
                        .HasColumnType("MONEY");

                    b.Property<long>("PaysheetId")
                        .HasColumnType("BIGINT");

                    b.Property<long?>("PayslipCreatedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("PayslipCreatedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<byte>("PayslipStatus")
                        .HasColumnType("TINYINT");

                    b.Property<int>("TenantId")
                        .HasColumnType("INT");

                    b.Property<decimal>("TotalPayment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("MONEY")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .HasName("NonClusteredIndex-Payslip-EmployeeId");

                    b.HasIndex("PaysheetId")
                        .HasName("NonClusteredIndex-Payslip-PaysheetId");

                    b.HasIndex("TenantId")
                        .HasName("NonClusteredIndex-Payslip-TenantId");

                    b.HasIndex("TenantId", "Code")
                        .IsUnique()
                        .HasName("NonClusteredIndex-Payslip-TenantId-Code-Uniq");

                    b.ToTable("Payslip");
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.PayslipAggregate.Models.PayslipClocking", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte?>("AbsenceType")
                        .HasColumnType("TINYINT");

                    b.Property<DateTime?>("CheckInDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2(3)")
                        .HasDefaultValue(null);

                    b.Property<DateTime?>("CheckOutDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2(3)")
                        .HasDefaultValue(null);

                    b.Property<long>("ClockingId");

                    b.Property<byte>("ClockingStatus")
                        .HasColumnType("TINYINT");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<int>("OverTimeAfterShiftWork")
                        .HasColumnType("INT");

                    b.Property<int>("OverTimeBeforeShiftWork")
                        .HasColumnType("INT");

                    b.Property<long>("PayslipId");

                    b.Property<long>("ShiftId")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<int>("TimeIsLate")
                        .HasColumnType("INT");

                    b.Property<int>("TimeIsLeaveWorkEarly")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("ClockingId")
                        .HasName("NonClusteredIndex-PayslipClocking-ClockingId");

                    b.HasIndex("PayslipId")
                        .HasName("NonClusteredIndex-PayslipClocking-PayslipId");

                    b.ToTable("PayslipClocking");
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.PayslipAggregate.Models.PayslipClockingPenalize", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "PayslipClockingPenalizeSeq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<long>("ClockingId")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime>("ClockingPenalizeCreated")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2(3)")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("BIT");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<int>("MoneyType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasDefaultValue(1);

                    b.Property<long>("PayslipId")
                        .HasColumnType("BIGINT");

                    b.Property<long>("PenalizeId")
                        .HasColumnType("BIGINT");

                    b.Property<string>("PenalizeName")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<long?>("ShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasDefaultValue(null);

                    b.Property<int>("TimesCount")
                        .HasColumnType("INT");

                    b.Property<decimal>("Value")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("PayslipId")
                        .HasName("NonClusteredIndex-PayslipClockingPenalize-PayslipId");

                    b.HasIndex("PenalizeId")
                        .HasName("NonClusteredIndex-PayslipClockingPenalize-PenalizeId");

                    b.ToTable("PayslipClockingPenalize");
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.PayslipAggregate.Models.PayslipDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("PayslipId");

                    b.Property<string>("RuleParam")
                        .IsRequired()
                        .HasColumnType("NTEXT");

                    b.Property<string>("RuleType")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("RuleValue")
                        .IsRequired()
                        .HasColumnType("NTEXT");

                    b.Property<int>("TenantId")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("PayslipId")
                        .HasName("NonClusteredIndex-PayslipDetail-PayslipId");

                    b.ToTable("PayslipDetail");
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.PayslipAggregate.Models.PayslipPenalize", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "PayslipPenalizeSeq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<long>("CreatedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2(3)")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("BIT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("BIT");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<int>("MoneyType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasDefaultValue(1);

                    b.Property<long>("PayslipId")
                        .HasColumnType("BIGINT");

                    b.Property<long>("PenalizeId")
                        .HasColumnType("BIGINT");

                    b.Property<string>("PenalizeName")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<int>("TimesCount")
                        .HasColumnType("INT");

                    b.Property<decimal>("Value")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("PayslipId")
                        .HasName("NonClusteredIndex-PayslipPenalize-PayslipId");

                    b.ToTable("PayslipPenalize");
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.PenalizeAggregate.Models.Penalize", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "PenalizeSeq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Code");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2(3)")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("BIT");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<int>("TenantId")
                        .HasColumnType("INT");

                    b.Property<decimal>("Value")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("TenantId")
                        .HasName("NonClusteredIndex-Penalize-TenantId");

                    b.HasIndex("TenantId", "Code")
                        .IsUnique()
                        .HasName("NonClusteredIndex-Penalize-TenantId-Code-Uniq")
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("Penalize");
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.SettingsAggregate.Models.NationalHoliday", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("EndDay")
                        .HasColumnType("TINYINT");

                    b.Property<byte>("EndMonth")
                        .HasColumnType("TINYINT");

                    b.Property<bool>("IsLunarCalendar")
                        .HasColumnType("BIT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<byte>("StartDay")
                        .HasColumnType("TINYINT");

                    b.Property<byte>("StartMonth")
                        .HasColumnType("TINYINT");

                    b.HasKey("Id");

                    b.ToTable("NationalHoliday");
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.SettingsAggregate.Models.Settings", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "SettingsSeq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2(3)")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<bool>("IsActive")
                        .HasColumnType("BIT");

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<int>("TenantId")
                        .HasColumnType("INT");

                    b.Property<string>("Value")
                        .HasColumnType("NVARCHAR(500)");

                    b.HasKey("Id");

                    b.HasIndex("TenantId")
                        .HasName("NonClusteredIndex-BranchSetting-TenantId");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.SettingsAggregate.Models.TenantNationalHoliday", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LastCreatedYear")
                        .HasColumnType("INT");

                    b.Property<int>("TenantId")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("TenantId")
                        .HasName("NonClusteredIndex-TenantNationalHoliday-TenantId");

                    b.ToTable("TenantNationalHoliday");
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.ShiftAggregate.Models.Shift", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "ShiftSeq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<int>("BranchId")
                        .HasColumnType("INT");

                    b.Property<long?>("CheckInBefore")
                        .HasColumnType("BIGINT");

                    b.Property<long?>("CheckOutAfter")
                        .HasColumnType("BIGINT");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2(3)")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<long>("From")
                        .HasColumnType("BIGINT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("BIT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("BIT");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<int>("TenantId")
                        .HasColumnType("INT");

                    b.Property<long>("To")
                        .HasColumnType("BIGINT");

                    b.HasKey("Id");

                    b.HasIndex("BranchId")
                        .HasName("NonClusteredIndex-Shift-BranchId");

                    b.HasIndex("TenantId")
                        .HasName("NonClusteredIndex-Shift-TenantId");

                    b.ToTable("Shift");
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.TimeSheetAggregate.Models.TimeSheet", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "TimeSheetSeq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<byte>("AutoGenerateClockingStatus");

                    b.Property<int>("BranchId")
                        .HasColumnType("INT");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2(3)")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("BIT");

                    b.Property<bool?>("IsRepeat")
                        .HasColumnType("BIT");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<string>("Note")
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<byte?>("RepeatEachDay")
                        .HasColumnType("TINYINT");

                    b.Property<byte?>("RepeatType")
                        .HasColumnType("TINYINT");

                    b.Property<bool>("SaveOnDaysOffOfBranch")
                        .HasColumnType("BIT");

                    b.Property<bool>("SaveOnHoliday")
                        .HasColumnType("BIT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<int>("TenantId")
                        .HasColumnType("INT");

                    b.Property<byte>("TimeSheetStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TINYINT")
                        .HasDefaultValueSql("1");

                    b.HasKey("Id");

                    b.HasIndex("BranchId")
                        .HasName("NonClusteredIndex-TimeSheet-BranchId");

                    b.HasIndex("EmployeeId")
                        .HasName("NonClusteredIndex-TimeSheet-EmployeeId");

                    b.HasIndex("TenantId")
                        .HasName("NonClusteredIndex-TimeSheet-TenantId");

                    b.ToTable("TimeSheet");
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.TimeSheetAggregate.Models.TimeSheetShift", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RepeatDaysOfWeek")
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<string>("ShiftIds")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(1000)");

                    b.Property<long>("TimeSheetId")
                        .HasColumnType("BIGINT");

                    b.HasKey("Id");

                    b.HasIndex("TimeSheetId")
                        .HasName("NonClusteredIndex-TimeSheet-TimeSheetShift");

                    b.ToTable("TimeSheetShift");
                });

            modelBuilder.Entity("KiotVietTimeSheet.Infrastructure.Persistence.Models.AuditProcessFailEvent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2(3)")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("ErrorMessage")
                        .IsRequired()
                        .HasColumnType("NTEXT");

                    b.Property<string>("EventData")
                        .IsRequired()
                        .HasColumnType("NTEXT");

                    b.Property<Guid>("EventId");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<DateTime?>("ProcessedTime")
                        .HasColumnType("DATETIME2(3)");

                    b.Property<int>("RetryTimes");

                    b.Property<int>("State");

                    b.HasKey("Id");

                    b.HasIndex("EventId")
                        .HasName("NonClusteredIndex-AuditProcessFailEvent-EventId");

                    b.HasIndex("State")
                        .HasName("NonClusteredIndex-AuditProcessFailEvent-State");

                    b.ToTable("AuditProcessFailEvent");
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.ClockingAggregate.Models.Clocking", b =>
                {
                    b.HasOne("KiotVietTimeSheet.Domain.AggregatesModels.EmployeeAggregate.Models.Employee", "WorkBy")
                        .WithMany("Clockings")
                        .HasForeignKey("WorkById")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.ClockingAggregate.Models.ClockingHistory", b =>
                {
                    b.HasOne("KiotVietTimeSheet.Domain.AggregatesModels.ClockingAggregate.Models.Clocking")
                        .WithMany("ClockingHistories")
                        .HasForeignKey("ClockingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.ClockingAggregate.Models.ClockingPenalize", b =>
                {
                    b.HasOne("KiotVietTimeSheet.Domain.AggregatesModels.ClockingAggregate.Models.Clocking", "Clocking")
                        .WithMany("ClockingPenalizes")
                        .HasForeignKey("ClockingId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KiotVietTimeSheet.Domain.AggregatesModels.PenalizeAggregate.Models.Penalize", "Penalize")
                        .WithMany("ClockingPenalizes")
                        .HasForeignKey("PenalizeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.CommissionAggregate.Models.CommissionBranch", b =>
                {
                    b.HasOne("KiotVietTimeSheet.Domain.AggregatesModels.CommissionAggregate.Models.Commission", "Commission")
                        .WithMany("CommissionBranches")
                        .HasForeignKey("CommissionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.CommissionDetailAggregate.Models.CommissionDetail", b =>
                {
                    b.HasOne("KiotVietTimeSheet.Domain.AggregatesModels.CommissionAggregate.Models.Commission")
                        .WithMany("CommissionDetails")
                        .HasForeignKey("CommissionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.ConfirmClockingAggregate.Models.ConfirmClocking", b =>
                {
                    b.HasOne("KiotVietTimeSheet.Domain.AggregatesModels.EmployeeAggregate.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KiotVietTimeSheet.Domain.AggregatesModels.GpsInfoAggregate.Models.GpsInfo", "GpsInfo")
                        .WithMany("ConfirmClockings")
                        .HasForeignKey("GpsInfoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.ConfirmClockingAggregate.Models.ConfirmClockingHistory", b =>
                {
                    b.HasOne("KiotVietTimeSheet.Domain.AggregatesModels.ConfirmClockingAggregate.Models.ConfirmClocking", "ConfirmClocking")
                        .WithMany("ConfirmClockingHistories")
                        .HasForeignKey("ConfirmClockingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.EmployeeAggregate.Models.Employee", b =>
                {
                    b.HasOne("KiotVietTimeSheet.Domain.AggregatesModels.DepartmentAggregate.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("KiotVietTimeSheet.Domain.AggregatesModels.JobTitleAggregate.Models.JobTitle", "JobTitle")
                        .WithMany()
                        .HasForeignKey("JobTitleId");
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.EmployeeAggregate.Models.EmployeeBranch", b =>
                {
                    b.HasOne("KiotVietTimeSheet.Domain.AggregatesModels.EmployeeAggregate.Models.Employee", "Employee")
                        .WithMany("EmployeeBranches")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.EmployeeAggregate.Models.EmployeeProfilePicture", b =>
                {
                    b.HasOne("KiotVietTimeSheet.Domain.AggregatesModels.EmployeeAggregate.Models.Employee", "Employee")
                        .WithMany("ProfilePictures")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.PayRateAggregate.Models.PayRateDetail", b =>
                {
                    b.HasOne("KiotVietTimeSheet.Domain.AggregatesModels.PayRateAggregate.Models.PayRate")
                        .WithMany("PayRateDetails")
                        .HasForeignKey("PayRateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.PayRateTemplateAggregate.Models.PayRateTemplateDetail", b =>
                {
                    b.HasOne("KiotVietTimeSheet.Domain.AggregatesModels.PayRateTemplateAggregate.Models.PayRateTemplate")
                        .WithMany("PayRateTemplateDetails")
                        .HasForeignKey("PayRateTemplateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.PayslipAggregate.Models.Payslip", b =>
                {
                    b.HasOne("KiotVietTimeSheet.Domain.AggregatesModels.PaysheetAggregate.Models.Paysheet")
                        .WithMany("Payslips")
                        .HasForeignKey("PaysheetId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.PayslipAggregate.Models.PayslipClocking", b =>
                {
                    b.HasOne("KiotVietTimeSheet.Domain.AggregatesModels.PayslipAggregate.Models.Payslip")
                        .WithMany("PayslipClockings")
                        .HasForeignKey("PayslipId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.PayslipAggregate.Models.PayslipClockingPenalize", b =>
                {
                    b.HasOne("KiotVietTimeSheet.Domain.AggregatesModels.PayslipAggregate.Models.Payslip")
                        .WithMany("PayslipClockingPenalizes")
                        .HasForeignKey("PayslipId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.PayslipAggregate.Models.PayslipDetail", b =>
                {
                    b.HasOne("KiotVietTimeSheet.Domain.AggregatesModels.PayslipAggregate.Models.Payslip")
                        .WithMany("PayslipDetails")
                        .HasForeignKey("PayslipId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.PayslipAggregate.Models.PayslipPenalize", b =>
                {
                    b.HasOne("KiotVietTimeSheet.Domain.AggregatesModels.PayslipAggregate.Models.Payslip")
                        .WithMany("PayslipPenalizes")
                        .HasForeignKey("PayslipId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.TimeSheetAggregate.Models.TimeSheet", b =>
                {
                    b.HasOne("KiotVietTimeSheet.Domain.AggregatesModels.EmployeeAggregate.Models.Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KiotVietTimeSheet.Domain.AggregatesModels.TimeSheetAggregate.Models.TimeSheetShift", b =>
                {
                    b.HasOne("KiotVietTimeSheet.Domain.AggregatesModels.TimeSheetAggregate.Models.TimeSheet")
                        .WithMany("TimeSheetShifts")
                        .HasForeignKey("TimeSheetId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
